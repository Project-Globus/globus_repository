=================================================================
=                     TABLE ACCESS INFORMATION                  =
=================================================================

//include the java.sql library

Class.forName("com.mysql.jdbc.Driver").newInstance();
Connection connection = DriverManager.getConnection(
                        "jdbc:mysql://cobi.cs.uwyo.edu/",
                        "user","password");
Statement statement   = connection.createStatement();
ResultSet result = statement.executeQuery(
     "SELECT * FROM sometable WHERE id = 1");



=================================================================
=                    TABLE CREATION INFORMATION                 =
=                     October 28, 2014: 14:22                   =
=================================================================

CREATE TABLE globus.Calendar
    -> (
    -> cal_id int,
    -> group_id int,
    -> PRIMARY KEY (cal_id),
    -> FOREIGN KEY (group_id) REFERENCES globus.Groups(group_id)
    -> );

CREATE TABLE globus.Events
    -> (
    -> cal_id INT,
    -> event_id INT,
    -> time_start BIGINT,
    -> time_end BIGINT,
    -> name VARCHAR(255),
    -> description VARCHAR(255),
    -> PRIMARY KEY (event_id),
    -> FOREIGN KEY (cal_id) REFERENCES globus.Calendar(cal_id)
    -> );

CREATE TABLE globus.EventMembers
    -> (
    -> cal_id INT,
    -> event_id INT,
    -> user_id INT,
    -> permissions ENUM('Attendee','Organizer','Administrator','Creator'),
    -> FOREIGN KEY (cal_id) REFERENCES globus.Calendar(cal_id),
    -> FOREIGN KEY (event_id) REFERENCES globus.Events(event_id),
    -> FOREIGN KEY (user_id) REFERENCES globus.Users(user_id)
    -> );

CREATE TABLE globus.Users
    -> (
    -> user_id INT,
    -> name VARCHAR(255),
    -> email VARCHAR(255),
    -> password VARCHAR(255),
    -> biography VARCHAR(2500),
    -> last_update BIGINT,
    -> PRIMARY KEY (user_id)
    -> );

CREATE TABLE globus.GroupMembers
    -> (
    -> group_id INT,
    -> user_id INT,
    -> FOREIGN KEY(group_id) REFERENCES globus.Groups(group_id),
    -> FOREIGN KEY(user_id) REFERENCES globus.Users(user_id)
    -> );

CREATE TABLE globus.Messages
    -> (
    -> message_id INT,
    -> group_id INT,
    -> type ENUM('Announcement','Broadcast','Emergency','Normal'),
    -> contents VARCHAR(2500),
    -> PRIMARY KEY (message_id),
    -> FOREIGN KEY (group_id) REFERENCES globus.Groups(group_id)
    -> );

CREATE TABLE globus.Groups
    -> (
    -> group_id INT,
    -> group_name VARCHAR(255),
    -> creator INT,
    -> description VARCHAR(2500),
    -> password VARCHAR(255),
    -> google_username VARCHAR(255),
    -> google_password VARCHAR(255),
    -> PRIMARY KEY (group_id)
    -> );

SHOW TABLES FROM globus;
+------------------+
| Tables_in_globus |
+------------------+
| Calendar         |
| EventMembers     |
| Events           |
| GroupMembers     |
| Groups           |
| Messages         |
| Users            |
+------------------+
7 rows in set (0.01 sec)
